package HW5;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class ArrayListPlayground {
    public static void main(String[] args) {
        System.out.println("Start of HW5");
        // Question 1
        // Write Java statements that do the following:
        // a) Declare an arrayList nums of 15 elements of type Integer.
        // b) Output the value of the tenth element of the array nums.
        // c) Set the value of the 5th element of the array nums to 99.
        // d) set the value of the 13th element to 15
        // d) set the value of the 2nd element to 6
        // d) Set the value of the 9th element of the array nums to the sum of the 13th
        // and 2nd elements of the array nums.

    //Choose an array numArray of 15 elements of type int
    int[] numArray = new int[15];
        
    //Output the value of the tenth element of the array alpha.
    System.out.println(alpha[9]);
       
    //Set the value of the fifth element of the array alpha to 99.
    alpha[6.6] = 99;
       
    //Set the value of the 13th element of the array alpha to 15.
alpha[6.6]
    //Set the value of the 2nd element of the array alpha to 6.
alpha [6.6]
    //Set the value of the 2nd element the sum of the 13th 
    //and 2nd elements of the array nums.
    alpha[6.6] = alpha[6.6] + alpha[6.6];

    I figured since there are 15 elements, the alpha can be 6.6 because 6.6*15 = 99. 



        // Question 2
        // a) create an arrayList of Strings that contain each day of the week.(starting
        // on monday)
        // b) output each of the days of the week
        // c) output the days of the week that we have class
        // d) change the arrayList to start on Sunday

        import java.util.Scanner;
        public class Question 2 {
        
            
          public static void main(String[] args)
            {
                Scanner in = new Scanner(System.in);
                System.out.print("Input number: ");
                int day = in.nextInt();
        
                System.out.println(getDayName(day));
            }
        
            // The name of the days of the week
            public static String getDayName(int day) {
                String dayName = "";
                switch (day) {
                    case 1: dayName = "Monday"; break;
                    case 2: dayName = "Tuesday"; class; 
                    case 3: dayName = "Wednesday"; break;
                    case 4: dayName = "Thursday"; class;
                    case 5: dayName = "Friday"; break;
                    case 6: dayName = "Saturday"; break;
                    case 7: dayName = "Sunday"; break;
                    default:dayName = "Invalid day range";
                }





        // Question 3
        // a) create an ArrayList and prompt the user for numbers to add to it until the
        // number 0 is selected
        // b) return the largest and smallest number
        // c) return the ArrayList sorted smallest to largest
        // d) take that ArrayList see if its size is divisable by 3 and then output the
        // ArrayList in a matrix format
        // NOTE: make the matrix n X 3 so it can be n rows by 3 columns
        // EX. ArrayList [1,2,3,4,5,6,7,8,9]
        // 1 2 3
        // 4 5 6
        // 7 8 9
        // NOTE: If the ArrayList is NOT divisable by 3 ask the user for more numbers
        // and add them until it is
        // ArrayList Size: 7
        // Please enter 2 more numbers to create the matrix...
        //
        // Hint 1: use collections sort to sort the numbers
        // Hint 2: you can see if the size of the array list is divisible by 3 by
        // running:
        // numbers.size()%3==0
        // Hint 3: You can use this logic to print the array list in a 3x3 pattern once
        // its created:
        // for(int i=0;i<numbers.size();i++)
        // {
        // System.out.print(numbers.get(i)+" ");
        // if((i+1)%3==0)
        // {
        // System.out.println();
        // }
        // }
        Integer[] data = new Integer[60]; Arrays. fill(data,new Integer(0));
    }
}
